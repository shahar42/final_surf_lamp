sources:
  surf_lamp_db:
    kind: postgres
    url: postgresql://surf_lamp_db_user:81SyRDKmGmq1YJVhNZ9SO1xGbdaifEKU@dpg-d2d4ffemc3f73a7b9p0-a.virginia-postgres.render.com/surf_lamp_db

tools:
  get_all_lamp_ids:
    kind: postgres-sql
    source: surf_lamp_db
    description: Get all active lamp IDs from the database
    parameters: []
    statement: SELECT lamp_id FROM lamps;

  get_lamp_details:
    kind: postgres-sql
    source: surf_lamp_db
    description: Get detailed information for a specific lamp including arduino_id and associated websites
    parameters:
      - name: lamp_id
        type: integer
        description: The lamp ID to get details for
    statement: |
      SELECT 
        l.arduino_id,
        l.lamp_id,
        du.website_url,
        ul.api_key,
        ul.http_endpoint
      FROM lamps l
      LEFT JOIN usage_lamps ul ON l.lamp_id = ul.lamp_id
      LEFT JOIN daily_usage du ON ul.usage_id = du.usage_id
      WHERE l.lamp_id = $1;

  fetch_website_data:
    kind: postgres-sql
    source: surf_lamp_db
    description: Mock tool - returns fake surf data (will be replaced with real API calls in Phase 2)
    parameters:
      - name: api_key
        type: string
        description: API key for the website
      - name: endpoint
        type: string
        description: HTTP endpoint to fetch data from
    statement: |
      SELECT 
        'mock_fetch_success' as status,
        1.5 as wave_height_m,
        8.0 as wave_period_s,
        12.0 as wind_speed_mps,
        180 as wind_deg,
        'Mock Location' as location,
        EXTRACT(EPOCH FROM NOW()) as timestamp;

  send_to_arduino:
    kind: postgres-sql
    source: surf_lamp_db
    description: Mock tool - logs attempt to send data to Arduino (will be replaced with real HTTP POST in Phase 2)
    parameters:
      - name: arduino_id
        type: integer
        description: The Arduino device ID to send data to
      - name: data
        type: string
        description: JSON data to send to Arduino
    statement: |
      SELECT 
        'mock_send_success' as status,
        $1 as arduino_id,
        'Data would be sent via HTTP POST' as message,
        NOW() as timestamp;

  update_lamp_timestamp:
    kind: postgres-sql
    source: surf_lamp_db
    description: Update the last_updated timestamp for a specific lamp
    parameters:
      - name: lamp_id
        type: integer
        description: The lamp ID to update
    statement: |
      UPDATE lamps 
      SET last_updated = CURRENT_TIMESTAMP 
      WHERE lamp_id = $1
      RETURNING lamp_id, last_updated;

toolsets:
  lamp_management:
    - get_all_lamp_ids
    - get_lamp_details
    - fetch_website_data
    - send_to_arduino
    - update_lamp_timestamp
