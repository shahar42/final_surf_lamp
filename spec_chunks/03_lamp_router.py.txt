Create file: app/api/routers/lamp_router.py

GENERATE ONLY PYTHON CODE for Arduino endpoint that returns EXACT format:

from fastapi import APIRouter, Depends, HTTPException
from shared.contracts import ILampControlService, ArduinoResponse, LampNotFoundError, ValidationError, validate_arduino_response
from app.dependencies import get_lamp_service
import logging

logger = logging.getLogger(__name__)
router = APIRouter()

@router.get("/{lamp_id}/config", response_model=dict)
async def get_lamp_config(
    lamp_id: str,
    lamp_service: ILampControlService = Depends(get_lamp_service)
):
    '''Get lamp configuration for Arduino device - MUST return exact Arduino format'''
    try:
        logger.info(f"Lamp config request for: {lamp_id}")
        
        # Get configuration from service
        response = await lamp_service.get_lamp_configuration_data(lamp_id)
        
        # Validate response format
        if not validate_arduino_response(response):
            logger.error("Invalid Arduino response format")
            raise HTTPException(status_code=500, detail="Response format error")
        
        return response
        
    except LampNotFoundError:
        logger.warning(f"Lamp not found: {lamp_id}")
        raise HTTPException(status_code=404, detail="Lamp not found")
    except ValidationError as e:
        logger.warning(f"Validation error: {e}")
        raise HTTPException(status_code=400, detail=str(e))
    except Exception as e:
        logger.error(f"Unexpected error: {e}")
        raise HTTPException(status_code=500, detail="Internal server error")